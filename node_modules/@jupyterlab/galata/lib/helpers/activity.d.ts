import { ElementHandle, Locator, Page } from '@playwright/test';
/**
 * Activity helper
 */
export declare class ActivityHelper {
    readonly page: Page;
    constructor(page: Page);
    /**
     * JupyterLab launcher selector
     *
     * @deprecated You should use locator selector {@link launcher}
     */
    get launcherSelector(): string;
    /**
     * JupyterLab launcher tab
     */
    get launcher(): Locator;
    /**
     * Close all widgets in the main area
     */
    closeAll(): Promise<void>;
    /**
     * Whether a tab is active or not
     *
     * @param name Activity name
     * @returns Active status
     */
    isTabActive(name: string): Promise<boolean>;
    /**
     * Continually press navigation key until specified element is focused
     *
     * @param selector name of attribute selector
     * @param key navigation key to press
     */
    keyToElement(selector: string, key: 'Tab' | 'ArrowDown' | 'ArrowUp'): Promise<void>;
    /**
     * Get a handle on a tab
     *
     * @param name Activity name
     * @returns Handle on the tab or null if the tab is not found
     *
     * @deprecated You should use locator instead {@link getTabLocator}
     */
    getTab(name?: string): Promise<ElementHandle<Element> | null>;
    /**
     * Get a tab locator
     * @param name Activity name
     * @returns Tab locator
     */
    getTabLocator(name?: string | RegExp): Locator;
    /**
     * Get a handle on a panel
     *
     * @param name Activity name
     * @returns Handle on the tab or null if the tab is not found
     *
     * @deprecated You should use locator instead {@link getPanelLocator}
     */
    getPanel(name?: string): Promise<ElementHandle<Element> | null>;
    /**
     * Get a panel locator
     *
     * @param name Activity name
     * @returns Panel locator or null
     */
    getPanelLocator(name?: string): Promise<Locator | null>;
    /**
     * Close a panel from its tab name
     *
     * @param name Activity name
     */
    closePanel(name: string | RegExp): Promise<void>;
    /**
     * Activate a tab is active
     *
     * @param name Activity name
     * @returns Whether the action is successful
     */
    activateTab(name: string | RegExp): Promise<boolean>;
}
